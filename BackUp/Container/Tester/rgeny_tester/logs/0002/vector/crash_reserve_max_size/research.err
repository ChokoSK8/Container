==458183== Memcheck, a memory error detector
==458183== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==458183== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==458183== Command: ./exe/srcs/vector/crash_test/std_crash_reserve_max_size
==458183== 
**458183** new/new[] failed and should throw an exception, but Valgrind
**458183**    cannot throw exceptions and so is aborting instead.  Sorry.
==458183==    at 0x483B3CC: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==458183==    by 0x483BED5: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==458183==    by 0x401BE6: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:115)
==458183==    by 0x401B90: __gnu_cxx::__alloc_traits<std::allocator<int>, int>::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:133)
==458183==    by 0x401B1F: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:346)
==458183==    by 0x401A38: int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<int*>(unsigned long, int*, int*) (stl_vector.h:1511)
==458183==    by 0x401597: std::vector<int, std::allocator<int> >::reserve(unsigned long) (vector.tcc:85)
==458183==    by 0x4013C5: main (reserve_max_size.cpp:22)
==458183== 
==458183== HEAP SUMMARY:
==458183==     in use at exit: 0 bytes in 0 blocks
==458183==   total heap usage: 3 allocs, 3 frees, 76,822 bytes allocated
==458183== 
==458183== All heap blocks were freed -- no leaks are possible
==458183== 
==458183== For lists of detected and suppressed errors, rerun with: -s
==458183== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
