==458870== Memcheck, a memory error detector
==458870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==458870== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==458870== Command: ./exe/srcs/vector/crash_test/std_crash_erase_after_end
==458870== 
==458870== Invalid read of size 2
==458870==    at 0x4842B30: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==458870==    by 0x4023D6: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:426)
==458870==    by 0x402384: int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*) (stl_algobase.h:471)
==458870==    by 0x402334: int* std::__copy_move_a1<false, int*, int*>(int*, int*, int*) (stl_algobase.h:506)
==458870==    by 0x402276: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_algobase.h:514)
==458870==    by 0x402126: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_algobase.h:568)
==458870==    by 0x40202A: std::vector<int, std::allocator<int> >::_M_erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (vector.tcc:190)
==458870==    by 0x4015F4: std::vector<int, std::allocator<int> >::erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_vector.h:1465)
==458870==    by 0x40146B: main (erase_after_end.cpp:22)
==458870==  Address 0x4dbacac is 4 bytes after a block of size 40 alloc'd
==458870==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==458870==    by 0x401C56: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:115)
==458870==    by 0x401C00: __gnu_cxx::__alloc_traits<std::allocator<int>, int>::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:133)
==458870==    by 0x401BBF: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:346)
==458870==    by 0x401B10: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:361)
==458870==    by 0x401884: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:305)
==458870==    by 0x40152C: std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) (stl_vector.h:538)
==458870==    by 0x40131B: main (erase_after_end.cpp:17)
==458870== 
==458870== Invalid read of size 2
==458870==    at 0x4842B3F: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==458870==    by 0x4023D6: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:426)
==458870==    by 0x402384: int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*) (stl_algobase.h:471)
==458870==    by 0x402334: int* std::__copy_move_a1<false, int*, int*>(int*, int*, int*) (stl_algobase.h:506)
==458870==    by 0x402276: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_algobase.h:514)
==458870==    by 0x402126: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_algobase.h:568)
==458870==    by 0x40202A: std::vector<int, std::allocator<int> >::_M_erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (vector.tcc:190)
==458870==    by 0x4015F4: std::vector<int, std::allocator<int> >::erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_vector.h:1465)
==458870==    by 0x40146B: main (erase_after_end.cpp:22)
==458870==  Address 0x4dbacb0 is 8 bytes after a block of size 40 alloc'd
==458870==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==458870==    by 0x401C56: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:115)
==458870==    by 0x401C00: __gnu_cxx::__alloc_traits<std::allocator<int>, int>::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:133)
==458870==    by 0x401BBF: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:346)
==458870==    by 0x401B10: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:361)
==458870==    by 0x401884: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:305)
==458870==    by 0x40152C: std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) (stl_vector.h:538)
==458870==    by 0x40131B: main (erase_after_end.cpp:17)
==458870== 
==458870== Invalid write of size 2
==458870==    at 0x4842B33: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==458870==    by 0x4023D6: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:426)
==458870==    by 0x402384: int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*) (stl_algobase.h:471)
==458870==    by 0x402334: int* std::__copy_move_a1<false, int*, int*>(int*, int*, int*) (stl_algobase.h:506)
==458870==    by 0x402276: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_algobase.h:514)
==458870==    by 0x402126: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_algobase.h:568)
==458870==    by 0x40202A: std::vector<int, std::allocator<int> >::_M_erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (vector.tcc:190)
==458870==    by 0x4015F4: std::vector<int, std::allocator<int> >::erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_vector.h:1465)
==458870==    by 0x40146B: main (erase_after_end.cpp:22)
==458870==  Address 0x4dbaca8 is 0 bytes after a block of size 40 alloc'd
==458870==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==458870==    by 0x401C56: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:115)
==458870==    by 0x401C00: __gnu_cxx::__alloc_traits<std::allocator<int>, int>::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:133)
==458870==    by 0x401BBF: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:346)
==458870==    by 0x401B10: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:361)
==458870==    by 0x401884: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:305)
==458870==    by 0x40152C: std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) (stl_vector.h:538)
==458870==    by 0x40131B: main (erase_after_end.cpp:17)
==458870== 
==458870== 
==458870== Process terminating with default action of signal 11 (SIGSEGV)
==458870==  Access not within mapped region at address 0x51A9000
==458870==    at 0x4842B3F: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==458870==    by 0x4023D6: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:426)
==458870==    by 0x402384: int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*) (stl_algobase.h:471)
==458870==    by 0x402334: int* std::__copy_move_a1<false, int*, int*>(int*, int*, int*) (stl_algobase.h:506)
==458870==    by 0x402276: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_algobase.h:514)
==458870==    by 0x402126: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_algobase.h:568)
==458870==    by 0x40202A: std::vector<int, std::allocator<int> >::_M_erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (vector.tcc:190)
==458870==    by 0x4015F4: std::vector<int, std::allocator<int> >::erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_vector.h:1465)
==458870==    by 0x40146B: main (erase_after_end.cpp:22)
==458870==  If you believe this happened as a result of a stack
==458870==  overflow in your program's main thread (unlikely but
==458870==  possible), you can try to increase the size of the
==458870==  main thread stack using the --main-stacksize= flag.
==458870==  The main thread stack size used in this run was 8388608.
==458870== 
==458870== HEAP SUMMARY:
==458870==     in use at exit: 40 bytes in 1 blocks
==458870==   total heap usage: 3 allocs, 2 frees, 76,840 bytes allocated
==458870== 
==458870== LEAK SUMMARY:
==458870==    definitely lost: 0 bytes in 0 blocks
==458870==    indirectly lost: 0 bytes in 0 blocks
==458870==      possibly lost: 0 bytes in 0 blocks
==458870==    still reachable: 40 bytes in 1 blocks
==458870==         suppressed: 0 bytes in 0 blocks
==458870== Rerun with --leak-check=full to see details of leaked memory
==458870== 
==458870== For lists of detected and suppressed errors, rerun with: -s
==458870== ERROR SUMMARY: 6175953 errors from 3 contexts (suppressed: 0 from 0)
timeout: the monitored command dumped core
