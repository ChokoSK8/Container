
erase(v.begin() + 1);
v.erase(v.begin() + pos) - v.begin() == 1
size     : 25
max_size : 288230376151711743
capacity : 26
a
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

erase(v.begin() + 25);
v.erase(v.begin() + pos) - v.begin() == 25
size     : 25
max_size : 288230376151711743
capacity : 26
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y

erase(v.begin() + 26);
v.erase(v.begin() + pos) - v.begin() == 26
size     : 25
max_size : 288230376151711743
capacity : 26
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y

erase(v.begin() + 36);
v.erase(v.begin() + pos) - v.begin() == 36
size     : 25
max_size : 288230376151711743
capacity : 26
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y

erase(v.begin() + 0);
v.erase(v.begin() + pos) - v.begin() == 0
size     : 25
max_size : 288230376151711743
capacity : 26
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

erase(v.begin() + 0, v.end() - 0);
size     : 0
max_size : 288230376151711743
capacity : 26

erase(v.begin() + 0, v.end() - 25);
size     : 25
max_size : 288230376151711743
capacity : 26
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

erase(v.begin() + 0, v.end() - 26);
size     : 26
max_size : 288230376151711743
capacity : 26
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

erase(v.begin() + 1, v.end() - 0);
size     : 1
max_size : 288230376151711743
capacity : 26
a

erase(v.begin() + 13, v.end() - 0);
size     : 13
max_size : 288230376151711743
capacity : 26
a
b
c
d
e
f
g
h
i
j
k
l
m

erase(v.begin() + 25, v.end() - 0);
size     : 25
max_size : 288230376151711743
capacity : 26
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
