==458820== Memcheck, a memory error detector
==458820== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==458820== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==458820== Command: ./exe/srcs/vector/crash_test/std_crash_erase_before_begin
==458820== 
==458820== Invalid write of size 2
==458820==    at 0x4842B33: memmove (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==458820==    by 0x402326: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:426)
==458820==    by 0x4022D4: int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*) (stl_algobase.h:471)
==458820==    by 0x402284: int* std::__copy_move_a1<false, int*, int*>(int*, int*, int*) (stl_algobase.h:506)
==458820==    by 0x4021C6: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_algobase.h:514)
==458820==    by 0x402106: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_algobase.h:568)
==458820==    by 0x401FB8: std::vector<int, std::allocator<int> >::_M_erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (vector.tcc:175)
==458820==    by 0x4015B4: std::vector<int, std::allocator<int> >::erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (stl_vector.h:1434)
==458820==    by 0x40143E: main (erase_before_begin.cpp:22)
==458820==  Address 0x4dbac7c is 4 bytes before a block of size 40 alloc'd
==458820==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==458820==    by 0x401BE6: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:115)
==458820==    by 0x401B90: __gnu_cxx::__alloc_traits<std::allocator<int>, int>::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:133)
==458820==    by 0x401B4F: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:346)
==458820==    by 0x401AA0: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:361)
==458820==    by 0x401814: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:305)
==458820==    by 0x4014FC: std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) (stl_vector.h:538)
==458820==    by 0x40131B: main (erase_before_begin.cpp:17)
==458820== 
==458820== 
==458820== HEAP SUMMARY:
==458820==     in use at exit: 0 bytes in 0 blocks
==458820==   total heap usage: 3 allocs, 3 frees, 76,840 bytes allocated
==458820== 
==458820== All heap blocks were freed -- no leaks are possible
==458820== 
==458820== For lists of detected and suppressed errors, rerun with: -s
==458820== ERROR SUMMARY: 4 errors from 1 contexts (suppressed: 0 from 0)
